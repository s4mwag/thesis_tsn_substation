[General]
sim-time-limit = 10s
*.*.eth[*].bitrate = 100Mbps

[Config TimeSynchronization]
# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# IF YOU WANT TO SIMULATE CLOCK DRIFT, MODIFY THESE PARAMETERS
*.gPTPclock.clock.typename = "IdealClock"
*.*.clock.typename = "SettableClock"
#*.MU*.clock.typename = "SettableClock"
#*.switch*.clock.typename = "SettableClock"

*.*.clock.oscillator.typename = "RandomDriftOscillator"
**.oscillator.changeInterval = 12.5ms
**.oscillator.driftRate = uniform(-100ppm, 100ppm)
**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
**.oscillator.driftRateChangeUpperLimit = 100ppm
**.oscillator.driftRateChangeLowerLimit = -100ppm

#GPTP CLOCK CONFIGURATION
*.gPTPclock.gptp.masterPorts = ["eth0"]
*.switch.gptp.slavePort = "eth0"
*.switch.gptp.masterPorts = [ "eth1", "eth2", "eth3","eth4"]

#source applications and periodic gates use local clock
*.*.app[*].source.clockModule = "^.^.clock"
*.*.eth[*].macLayer.queue.transmissionGate[*].clockModule = "^.^.^.^.clock"
# make sure sync and pdelay messages don't occur at the same time
*.*.gptp.syncInitialOffset = 5ms
*.*.gptp.syncInterval = 10ms
*.*.gptp.pdelayInitialOffset = 0ms
*.*.gptp.pdelayInterval = 1s

[Config gPTP_Example]
# Provides visuals for synchronization. Used for debugging purposes
description = "Clock synchronization info for debugging"
extends = IntegrationExampleSmall
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
#*.visualizer.infoVisualizer[*].displayInfos = true

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "gPTPclock.clock"

# Synchronization difference visualization
*.visualizer.numInfoVisualizers = 4
*.visualizer.infoVisualizer[0].modules = "*.gPTPclock.clock"
*.visualizer.infoVisualizer[1].modules = "*.switch*.clock"
*.visualizer.infoVisualizer[2].modules = "*.IED*.clock"
*.visualizer.infoVisualizer[3].modules = "*.MU*.clock"
*.visualizer.infoVisualizer[*].placementHint = "left"
*.gPTPclock.clock.displayStringTextFormat = "time: %T"
*.switch*.clock.displayStringTextFormat = "diff: %d"
*.IED*.clock.displayStringTextFormat = "diff: %d"
*.MU*.clock.displayStringTextFormat = "diff: %d"

[Config MultiCast]
network = MultiCast
**.hasGlobalArp = true

**.IED_A.numApps = 2
**.IED_A.app[0].typename = "EthernetSinkApp"
**.IED_A.app[0].display-name = "SV Sink #1"
**.IED_A.app[0].io.localAddress = "01:0C:CD:04:00:20"
**.IED_A.app[0].io.interface = "eth0"

#IED_A MMS TO IED_B
**.IED_A.app[1].typename = "TcpClientApp"
**.IED_A.app[1].source.packetLength = 84B # Packet size is 150 B
**.IED_A.app[1].source.productionInterval = 1s/10
**.IED_A.app[1].source.packetNameFormat = "%M->MMS-%c"
**.IED_A.app[1].io.connectAddress = "IED_B"
**.IED_A.app[1].io.connectPort = 1112


**.IED_B.numApps = 2

#IED_B MMS SINK
**.IED_B.app[0].typename = "TcpSinkApp"
**.IED_B.app[0].display-name = "MMS Sink"
**.IED_B.app[0].io.interface = "eth0"
#**.IED_B.app[0].localAddress = "10.0.0.10"
**.IED_B.app[0].localPort = 1112

**.IED_B.app[1].typename = "EthernetSinkApp"
**.IED_B.app[1].display-name = "SV Sink #1"
**.IED_B.app[1].io.localAddress = "01:0C:CD:04:00:20"
**.IED_B.app[1].io.interface = "eth0"

**.IED_C.numApps = 1
**.IED_C.app[0].typename = "EthernetSinkApp"
**.IED_C.app[0].display-name = "SV Sink #1"
**.IED_C.app[0].io.localAddress = "01:0C:CD:04:00:30"
**.IED_C.app[0].io.interface = "eth0"

**.MU.numApps = 1
**.MU.app[0].typename = "EthernetSourceApp"
**.MU.app[0].display-name = "SV Source #1"
**.MU.app[0].source.packetLength = 84B
**.MU.app[0].source.productionInterval = 1.0s/40
**.MU.app[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
**.MU.app[0].io.remoteAddress = "01:0C:CD:04:00:20"
**.MU.app[0].io.interface = "eth0"

# GOOSE Type 1/1A 	= 01-0C-CD-01-00-00 through 01-0C-CD-01-01-FF 
# SV 				= 01-0C-CD-04-00-00 through 01-0C-CD-04-01-FF 

**.switch.macTable.forwardingTable = [{address: "IED_A", interface: "eth0"}, \
										{address: "IED_B", interface: "eth1"}, \
										{address: "IED_C", interface: "eth2"}, \
										{address: "MU", interface: "eth3"}, \
									  	{address: "01:0C:CD:04:00:20", interface: "eth1"}, \
                                      	{address: "01:0C:CD:04:00:20", interface: "eth2"}, \
									  	{address: "01:0C:CD:04:00:30", interface: "eth3"}, \
										{address: "00:00:00:00:00:10", interface: "eth1"},]

[Config IntegrationExampleSmall]
network = IntegrationExampleSmall
extends = TimeSynchronization
**.hasGlobalArp = true

#IED_A MMS TO IED_B
**.IED_A.numApps = 3
**.IED_A.app[0].typename = "TcpClientApp"
**.IED_A.app[0].source.packetLength = 84B # Packet size is 150 B
**.IED_A.app[0].source.productionInterval = 1s/10
**.IED_A.app[0].source.packetNameFormat = "%M->MMS-%c"
**.IED_A.app[0].io.connectAddress = "IED_B" 
**.IED_A.app[0].io.connectPort = 1112

#IED_A GOOSE TO MU
**.IED_A.app[1].typename = "EthernetSourceApp"
**.IED_A.app[1].display-name = "GOOSE Source #1"
**.IED_A.app[1].io.interface = "eth0"
**.IED_A.app[1].io.remoteAddress = "MU"
**.IED_A.app[1].source.packetLength = 100B
**.IED_A.app[1].source.productionInterval = 1s
**.IED_A.app[1].source.packetNameFormat = "%M->GOOSE-%c"

#IED_A SV SINK
**.IED_A.app[2].typename = "EthernetSinkApp"
**.IED_A.app[2].display-name = "SV Sink #1"
**.IED_A.app[2].io.localAddress = "01:0C:CD:04:00:20"
**.IED_A.app[2].io.interface = "eth0"

#IED_B GOOSE TO MU
**.IED_B.numApps = 3
**.IED_B.app[0].typename = "EthernetSourceApp"
**.IED_B.app[0].io.interface = "eth0"
**.IED_B.app[0].io.remoteAddress = "MU"
**.IED_B.app[0].source.packetLength = 100B
**.IED_B.app[0].source.productionInterval = 1s
**.IED_B.app[0].source.packetNameFormat = "%M->GOOSE->%c"

#IED_B SV SINK
**.IED_B.app[1].typename = "EthernetSinkApp"
**.IED_B.app[1].display-name = "SV Sink #1"
**.IED_B.app[1].io.localAddress = "01:0C:CD:04:00:20"
**.IED_B.app[1].io.interface = "eth0"

#IED_B MMS SINK
**.IED_B.app[2].typename = "TcpSinkApp"
**.IED_B.app[2].display-name = "MMS Sink"
**.IED_B.app[2].localPort = 1112

#IED_C SV SINK
**.IED_C.numApps = 1
**.IED_C.app[0].typename = "EthernetSinkApp"
**.IED_C.app[0].display-name = "SV Sink #1"
**.IED_C.app[0].io.localAddress = "01:0C:CD:04:00:30"
**.IED_C.app[0].io.interface = "eth0"

#MU SV TO IED_A AND IED_B to show multicast
**.MU.numApps = 2
**.MU.app[0].typename = "EthernetSourceApp"
**.MU.app[0].display-name = "SV Source #1"
**.MU.app[0].source.packetLength = 84B
**.MU.app[0].source.productionInterval = 1.0s/40
**.MU.app[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
**.MU.app[0].io.remoteAddress = "01:0C:CD:04:00:20"
**.MU.app[0].io.interface = "eth0"

#MU GOOSE SINK
**.MU.app[1].typename = "EthernetSinkApp"
**.MU.app[1].display-name = "GOOSE Sink #1"
**.MU.app[1].io.interface = "eth0"
**.MU.app[1].io.localAddress = "MU"

# GOOSE Type 1/1A 	= 01-0C-CD-01-00-00 through 01-0C-CD-01-01-FF 
# SV 				= 01-0C-CD-04-00-00 through 01-0C-CD-04-01-FF 

**.switch.macTable.forwardingTable = [	{address: "gPTPclock", interface: "eth0"}, \
										{address: "IED_A", interface: "eth1"}, \
										{address: "IED_B", interface: "eth2"}, \
										{address: "IED_C", interface: "eth3"}, \
										{address: "MU", interface: "eth4"}, \
									  	{address: "01:0C:CD:04:00:20", interface: "eth1"}, \
                                      	{address: "01:0C:CD:04:00:20", interface: "eth2"}, \
									  	{address: "01:0C:CD:04:00:30", interface: "eth3"}]