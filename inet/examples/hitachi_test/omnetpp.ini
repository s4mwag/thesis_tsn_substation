[General]
sim-time-limit = 10s
seed-set = 12345 # SEED FOR RANDOM NUMBER GENERATOR USED FOR GOOSE MESSAGES

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps
#*.*.ethernet.typename = "EthernetLayer"
#*.*.eth[*].typename = "LayeredEthernetInterface"

[Config TimeSynchronization]
# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = false

# IF YOU WANT TO SIMULATE CLOCK DRIFT, MODIFY THESE PARAMETERS
#**.clock.typename = "SettableClock"
#**.gPTPclock.clock.typename = "IdealClock"
#**.gPTPclock.clock.oscillator.typename = "RandomDriftOscillator"
**.oscillator.changeInterval = 12.5ms
**.oscillator.driftRate = uniform(-100ppm, 100ppm)
**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
**.oscillator.driftRateChangeUpperLimit = 100ppm
**.oscillator.driftRateChangeLowerLimit = -100ppm

#GPTP CLOCK CONFIGURATION
**.gPTPclock.gptp.masterPorts = ["eth0"]
**.switch.gptp.slavePort = "eth0"
**.switch.gptp.masterPorts = [ "eth1", "eth2", "eth3","eth4"]

#source applications and periodic gates use local clock
*.*.app[*].source.clockModule = "^.^.clock"
*.*.eth[*].macLayer.queue.transmissionGate[*].clockModule = "^.^.^.^.clock"

# make sure sync and pdelay messages don't occur at the same time
*.*.gptp.syncInitialOffset = 500s
*.*.gptp.syncInterval = 100s
*.*.gptp.pdelayInitialOffset = 100s
*.*.gptp.pdelayInterval = 1s

[Config gPTP_Example]
# Provides visuals for synchronization. Used for debugging purposes
description = "Clock synchronization info for debugging"
extends = IntegrationExampleSmall
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
#*.visualizer.infoVisualizer[*].displayInfos = true

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "gPTPclock.clock"

# Synchronization difference visualization
*.visualizer.numInfoVisualizers = 4
*.visualizer.infoVisualizer[0].modules = "*.gPTPclock.clock"
*.visualizer.infoVisualizer[1].modules = "*.switch*.clock"
*.visualizer.infoVisualizer[2].modules = "*.IDE*.clock"
*.visualizer.infoVisualizer[3].modules = "*.MU*.clock"
*.visualizer.infoVisualizer[*].placementHint = "left"
*.gPTPclock.clock.displayStringTextFormat = "time: %T"
**.switch*.clock.displayStringTextFormat = "diff: %d"
**.IDE*.clock.displayStringTextFormat = "diff: %d"
**.MU*.clock.displayStringTextFormat = "diff: %d"

[Config MultiCast]
network = MultiCast
**.hasGlobalArp = true

**.IDE_A.numApps = 2
**.IDE_A.app[0].typename = "EthernetSinkApp"
**.IDE_A.app[0].display-name = "SV Sink #1"
**.IDE_A.app[0].io.localAddress = "01:0C:CD:04:00:20"
**.IDE_A.app[0].io.interface = "eth0"

#IDE_A MMS TO IDE_B
**.IDE_A.app[1].typename = "TcpClientApp"
**.IDE_A.app[1].source.packetLength = 84B # Packet size is 150 B
**.IDE_A.app[1].source.productionInterval = 1s/10
**.IDE_A.app[1].source.packetNameFormat = "%M->MMS-%c"
**.IDE_A.app[1].io.connectAddress = "10.0.0.2"
**.IDE_A.app[1].io.connectPort = 1112

**.IDE_A.ipv4.arp = [{address: "IDE_A", interface: "eth0"}]

**.IDE_B.numApps = 2

#IDE_B MMS SINK
**.IDE_B.app[0].typename = "TcpSinkApp"
**.IDE_B.app[0].display-name = "MMS Sink"
**.IDE_B.app[0].io.interface = "eth0"
#**.IDE_B.app[0].localAddress = "10.0.0.10"
**.IDE_B.app[0].localPort = 1112

**.IDE_B.app[1].typename = "EthernetSinkApp"
**.IDE_B.app[1].display-name = "SV Sink #1"
**.IDE_B.app[1].io.localAddress = "01:0C:CD:04:00:20"
**.IDE_B.app[1].io.interface = "eth0"

**.IDE_C.numApps = 1
**.IDE_C.app[0].typename = "EthernetSinkApp"
**.IDE_C.app[0].display-name = "SV Sink #1"
**.IDE_C.app[0].io.localAddress = "01:0C:CD:04:00:30"
**.IDE_C.app[0].io.interface = "eth0"

**.MU.numApps = 1
**.MU.app[0].typename = "EthernetSourceApp"
**.MU.app[0].display-name = "SV Source #1"
**.MU.app[0].source.packetLength = 84B
**.MU.app[0].source.productionInterval = 1.0s/40
**.MU.app[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
**.MU.app[0].io.remoteAddress = "01:0C:CD:04:00:20"
**.MU.app[0].io.interface = "eth0"

# GOOSE Type 1/1A 	= 01-0C-CD-01-00-00 through 01-0C-CD-01-01-FF 
# SV 				= 01-0C-CD-04-00-00 through 01-0C-CD-04-01-FF 

**.switch.macTable.forwardingTable = [{address: "IDE_A", interface: "eth0"}, \
										{address: "IDE_B", interface: "eth1"}, \
										{address: "IDE_C", interface: "eth2"}, \
										{address: "MU", interface: "eth3"}, \
									  	{address: "01:0C:CD:04:00:20", interface: "eth1"}, \
                                      	{address: "01:0C:CD:04:00:20", interface: "eth2"}, \
									  	{address: "01:0C:CD:04:00:30", interface: "eth3"}, \
										{address: "00:00:00:00:00:10", interface: "eth1"},]

[Config IntegrationExampleSmall]
network = IntegrationExampleSmall
extends = TimeSynchronization
**.hasGlobalArp = true

#IDE_A MMS TO IDE_B
**.IDE_A.numApps = 1
#**.IDE_A.app[0].typename = "TcpClientApp"
#**.IDE_A.app[0].source.packetLength = 84B # Packet size is 150 B
#**.IDE_A.app[0].source.productionInterval = 1s/10
#**.IDE_A.app[0].source.packetNameFormat = "%M->MMS-%c"
#**.IDE_A.app[0].io.connectAddress = "IDE_B" 
#**.IDE_A.app[0].io.connectPort = 1112

#IDE_A GOOSE TO MU
**.IDE_A.app[0].typename = "EthernetSourceApp"
**.IDE_A.app[0].display-name = "GOOSE Source #1"
**.IDE_A.app[0].io.interface = "eth0"
**.IDE_A.app[0].io.remoteAddress = "MU"
**.IDE_A.app[0].source.packetLength = 100B
**.IDE_A.app[0].source.productionInterval = 100ms
**.IDE_A.app[0].source.packetNameFormat = "%M->GOOSE-%c"
**.IDE_A.app[0].source.useGoose = true
**.IDE_A.app[0].source.numberOfGooseEvents = 100

#IDE_A SV SINK
#**.IDE_A.app[2].typename = "EthernetSinkApp"
#**.IDE_A.app[2].display-name = "SV Sink #1"
#**.IDE_A.app[2].io.localAddress = "01:0C:CD:04:00:20"
#**.IDE_A.app[2].io.interface = "eth0"

#IDE_B GOOSE TO MU
#**.IDE_B.numApps = 3
#**.IDE_B.app[0].typename = "EthernetSourceApp"
#**.IDE_B.app[0].io.interface = "eth0"
#**.IDE_B.app[0].io.remoteAddress = "MU"
#**.IDE_B.app[0].source.packetLength = 100B
#**.IDE_B.app[0].source.productionInterval = 1s
#**.IDE_B.app[0].source.packetNameFormat = "%M->GOOSE->%c"

#IDE_B SV SINK
#**.IDE_B.app[1].typename = "EthernetSinkApp"
#**.IDE_B.app[1].display-name = "SV Sink #1"
#**.IDE_B.app[1].io.localAddress = "01:0C:CD:04:00:20"
#**.IDE_B.app[1].io.interface = "eth0"

#IDE_B MMS SINK
#**.IDE_B.app[2].typename = "TcpSinkApp"
#**.IDE_B.app[2].display-name = "MMS Sink"
#**.IDE_B.app[2].localPort = 1112

#IDE_C SV SINK
#**.IDE_C.numApps = 1
#**.IDE_C.app[0].typename = "EthernetSinkApp"
#**.IDE_C.app[0].display-name = "SV Sink #1"
#**.IDE_C.app[0].io.localAddress = "01:0C:CD:04:00:30"
#**.IDE_C.app[0].io.interface = "eth0"

#MU SV TO IDE_A AND IDE_B to show multicast
**.MU.numApps = 1
#**.MU.app[0].typename = "EthernetSourceApp"
#**.MU.app[0].display-name = "Goose Source #1"
#**.MU.app[0].source.packetLength = 84B
#**.MU.app[0].source.productionInterval = 1.0s/40
#**.MU.app[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
#**.MU.app[0].io.remoteAddress = "01:0C:CD:04:00:20"
#**.MU.app[0].io.interface = "eth0"

#MU GOOSE SINK
**.MU.app[0].typename = "EthernetSinkApp"
**.MU.app[0].display-name = "GOOSE Sink #1"
**.MU.app[0].io.interface = "eth0"
**.MU.app[0].io.localAddress = "MU"

# GOOSE Type 1/1A 	= 01-0C-CD-01-00-00 through 01-0C-CD-01-01-FF 
# SV 				= 01-0C-CD-04-00-00 through 01-0C-CD-04-01-FF 

**.switch.macTable.forwardingTable = [	{address: "gPTPclock", interface: "eth0"}, \
										{address: "IDE_A", interface: "eth1"}, \
										{address: "IDE_B", interface: "eth2"}, \
										{address: "IDE_C", interface: "eth3"}, \
										{address: "MU", interface: "eth4"}, \
									  	{address: "01:0C:CD:04:00:20", interface: "eth1"}, \
                                      	{address: "01:0C:CD:04:00:20", interface: "eth2"}, \
									  	{address: "01:0C:CD:04:00:30", interface: "eth3"}]






