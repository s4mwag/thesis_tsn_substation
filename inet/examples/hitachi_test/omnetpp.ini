[General]
sim-time-limit = 10s

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"

[Config TimeSynchronizedSmallNetwork]
# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# IF YOU WANT TO SIMULATE CLOCK DRIFT, MODIFY THESE PARAMETERS
**.gPTPclock*.clock.oscillator.typename = "RandomDriftOscillator"
**.oscillator.changeInterval = 12.5ms
**.oscillator.driftRate = uniform(-100ppm, 100ppm)
**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
**.oscillator.driftRateChangeUpperLimit = 100ppm
**.oscillator.driftRateChangeLowerLimit = -100ppm

#GPTP CLOCK CONFIGURATION
*.gPTPclock.gptp.masterPorts = ["eth0"]
*.tsnSwitch.gptp.slavePort = "eth3"
*.tsnSwitch.gptp.masterPorts = [ "eth0", "eth1", "eth2"]
**.referenceClock = "gPTPclock.clock"


[Config TwoHosts2]
extends = TimeSynchronizedSmallNetwork
network = TwoHosts2

#HOST A SOURCE CONFIGURATION
**.hostA.activateLLCsource = true
**.hostA.numSourceApps = 1
**.hostA.sourceApp[0].io.interface = "eth0"
**.hostA.sourceApp[0].io.remoteAddress = "hostB"
**.hostA.sourceApp[0].source.packetLength = 100B
**.hostA.sourceApp[0].source.productionInterval = 100us
**.hostA.sourceApp[0].source.packetNameFormat = "%M->SV-%c"
**.hostA.sourceApp[0].io.localSap = 1
**.hostA.sourceApp[0].io.remoteSap = 6

#HOST A MMS SOURCE CONFIGURATION
**.hostA.numApps = 2
**.hostA.app[0].typename = "TcpClientApp"
**.hostA.app[0].source.packetLength = 84B # Packet size is 150 B
**.hostA.app[0].source.productionInterval = 1000us
**.hostA.app[0].source.packetNameFormat = "%M->MMS-%c"
**.hostA.app[0].io.connectAddress = "hostB" 
**.hostA.app[0].io.connectPort = 1112

#HOST A MMS SINK CONFIGURATION
**.hostA.app[1].typename = "TcpSinkApp"
**.hostA.app[1].display-name = "MMS Sink"
**.hostA.app[1].localPort = 1111


#HOST B SOURCE CONFIGURATION
**.hostB.activateLLCsource = true
**.hostB.numSourceApps = 1
**.hostB.sourceApp[0].io.interface = "eth0"
**.hostB.sourceApp[0].io.remoteAddress = "hostC"
**.hostB.sourceApp[0].source.packetLength = 100B
**.hostB.sourceApp[0].source.productionInterval = 100us
**.hostB.sourceApp[0].source.packetNameFormat = "%M->SV-%c"
**.hostB.sourceApp[0].io.localSap = 1
**.hostB.sourceApp[0].io.remoteSap = 6

#HOST B SINK CONFIGURATION
**.hostB.activateLLCsink = true
**.hostB.numSinkApps = 1
**.hostB.sinkApp[0].io.interface = "eth0"
**.hostB.sinkApp[0].io.localAddress = "hostB"
**.hostB.sinkApp[0].io.localSap = 6


**.hostB.numApps = 2
#HOST B MMS SOURCE CONFIGURATION
**.hostB.app[0].typename = "TcpClientApp"
**.hostB.app[0].source.packetLength = 84B # Packet size is 150 B
**.hostB.app[0].source.productionInterval = 1000us
**.hostB.app[0].source.packetNameFormat = "%M->MMS-%c"
**.hostB.app[0].io.connectAddress = "hostC" 
**.hostB.app[0].io.connectPort = 1113

#HOST B MMS SINK CONFIGURATION
**.hostB.app[1].typename = "TcpSinkApp"
**.hostB.app[1].display-name = "MMS Sink"
**.hostB.app[1].localPort = 1112

#HOST C SOURCE CONFIGURATION
**.hostC.activateLLCsource = true
**.hostC.numSourceApps = 1
**.hostC.sourceApp[0].io.interface = "eth0"
**.hostC.sourceApp[0].io.remoteAddress = "hostB"
**.hostC.sourceApp[0].source.packetLength = 100B
**.hostC.sourceApp[0].source.productionInterval = 100us
**.hostC.sourceApp[0].source.packetNameFormat = "%M->SV-%c"
**.hostC.sourceApp[0].io.localSap = 1
**.hostC.sourceApp[0].io.remoteSap = 6

#HOST C SINK CONFIGURATION
**.hostC.activateLLCsink = true
**.hostC.numSinkApps = 1
**.hostC.sinkApp[0].io.interface = "eth0"
**.hostC.sinkApp[0].io.localAddress = "hostC"
**.hostC.sinkApp[0].io.localSap = 6

**.hostC.numApps = 2
#HOST C MMS SOURCE CONFIGURATION
**.hostC.app[0].typename = "TcpClientApp"
**.hostC.app[0].source.packetLength = 84B # Packet size is 150 B
**.hostC.app[0].source.productionInterval = 1000us
**.hostC.app[0].source.packetNameFormat = "%M->MMS-%c"
**.hostC.app[0].io.connectAddress = "hostA" 
**.hostC.app[0].io.connectPort = 1111

#HOST C MMS SINK CONFIGURATION
**.hostC.app[1].typename = "TcpSinkApp"
**.hostC.app[1].display-name = "MMS Sink"
**.hostC.app[1].localPort = 1113


#**.crcMode = "computed"
#**.fcsMode = "computed"
#**.hostA.numPcapRecorders = 1
#**.hostA.pcapRecorder[0].pcapFile = "results/router1.eth.pcap"
#**.hostA.pcapRecorder[0].moduleNamePatterns = "eth[*]"

[Config SimpleSubstationSetupEthernet]
network = SimpleSubstationSetupEthernet
**.hasGlobalArp = true

#IDE_A MMS TO IDE_B
**.IDE_A.numApps = 1
**.IDE_A.app[0].typename = "TcpClientApp"
**.IDE_A.app[0].source.packetLength = 84B # Packet size is 150 B
**.IDE_A.app[0].source.productionInterval = 1s/10
**.IDE_A.app[0].source.packetNameFormat = "%M->MMS-%c"
**.IDE_A.app[0].io.connectAddress = "IDE_B" 
**.IDE_A.app[0].io.connectPort = 1112

#IDE_A GOOSE TO MU
**.IDE_A.activateLLCsource = true
**.IDE_A.numSourceApps = 1
**.IDE_A.sourceApp[0].io.interface = "eth0"
**.IDE_A.sourceApp[0].io.remoteAddress = "MU"
**.IDE_A.sourceApp[0].source.packetLength = 100B
**.IDE_A.sourceApp[0].source.productionInterval = 1s
**.IDE_A.sourceApp[0].source.packetNameFormat = "%M->GOOSE-%c"
**.IDE_A.sourceApp[0].io.localSap = 1
**.IDE_A.sourceApp[0].io.remoteSap = 6

#IDE_A SV SINK
**.IDE_A.activateLLCsink = true
**.IDE_A.numSinkApps = 1
**.IDE_A.sinkApp[0].io.interface = "eth0"
**.IDE_A.sinkApp[0].io.localAddress = "IDE_A"
**.IDE_A.sinkApp[0].io.localSap = 6

#IDE_B GOOSE TO MU
**.IDE_B.activateLLCsource = true
**.IDE_B.numSourceApps = 1
**.IDE_B.sourceApp[0].io.interface = "eth0"
**.IDE_B.sourceApp[0].io.remoteAddress = "MU"
**.IDE_B.sourceApp[0].source.packetLength = 100B
**.IDE_B.sourceApp[0].source.productionInterval = 1s
**.IDE_B.sourceApp[0].source.packetNameFormat = "%M->GOOSE->%c"
**.IDE_B.sourceApp[0].io.localSap = 1
**.IDE_B.sourceApp[0].io.remoteSap = 6

#IDE_B MMS SINK
**.IDE_B.numApps = 1
**.IDE_B.app[0].typename = "TcpSinkApp"
**.IDE_B.app[0].display-name = "MMS Sink"
**.IDE_B.app[0].localPort = 1112

#IDE_B SV SINK
**.IDE_B.activateLLCsink = true
**.IDE_B.numSinkApps = 1
**.IDE_B.sinkApp[0].io.interface = "eth0"
**.IDE_B.sinkApp[0].io.localAddress = "IDE_B"
**.IDE_B.sinkApp[0].io.localSap = 6

#MU SV TO IDE_A and IDE_B
#TODO Make the SV traffic multicast to IDE_A and IDE_B
**.MU.activateLLCsource = true
**.MU.numSourceApps = 1
**.MU.sourceApp[0].io.interface = "eth0"
**.MU.sourceApp[0].io.remoteAddress = "IDE_A"
**.MU.sourceApp[0].source.packetLength = 100B
**.MU.sourceApp[0].source.productionInterval = 1s/40
**.MU.sourceApp[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
**.MU.sourceApp[0].io.localSap = 1
**.MU.sourceApp[0].io.remoteSap = 6

#**.MU.sourceApp[1].io.interface = "eth0"
#**.MU.sourceApp[1].io.remoteAddress = "IDE_B"
#**.MU.sourceApp[1].source.packetLength = 100B
#**.MU.sourceApp[1].source.productionInterval = 1s/40
#**.MU.sourceApp[1].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
#**.MU.sourceApp[1].io.localSap = 1
#**.MU.sourceApp[1].io.remoteSap = 6

#MU GOOSE SINK
**.MU.activateLLCsink = true
**.MU.numSinkApps = 1
**.MU.sinkApp[0].io.interface = "eth0"
**.MU.sinkApp[0].io.localAddress = "MU"
**.MU.sinkApp[0].io.localSap = 6

#**.switch.macTable.forwardingTable = [{address: "IDE_A", interface: "eth0"}, \
                                      {address: "IDE_B", interface: "eth1"}, \
                                      {address: "MU", interface: "eth2"}]

[Config MultiCast]
network = MultiCast
#**.hasGlobalArp = false
**.ethernet.macHeaderChecker.promiscuous = true
#IDE_A MMS TO IDE_B
**.IDE_A.numApps = 1
**.IDE_A.app[0].typename = "EthernetSourceApp"
**.IDE_A.app[0].source.packetLength = 84B # Packet size is 150 B
**.IDE_A.app[0].source.productionInterval = 1s/10
**.IDE_A.app[0].source.packetNameFormat = "%M->GOOSE-%c"
#**.IDE_A.app[0].io.localAddress = "01:0C:CD:01:00:01"
**.IDE_A.app[0].io.remoteAddress = "MU"
**.IDE_A.app[0].io.interface = "eth0"

**.IDE_B.numApps = 1
**.IDE_B.app[0].typename = "EthernetSinkApp"
#**.IDE_B.app[0].io.localAddress = "IDE_B"
**.IDE_B.app[0].io.interface = "eth0"

**.IDE_C.numApps = 1
**.IDE_C.app[0].typename = "EthernetSinkApp"
#**.IDE_C.app[0].io.localAddress = "IDE_C"
**.IDE_C.app[0].io.interface = "eth0"

**.MU.numApps = 1
**.MU.app[0].typename = "EthernetSinkApp"
#**.MU.app[0].io.localAddress = "MU"
**.MU.app[0].io.interface = "eth0"

#**.IDE_A.app[0].io.connectAddress = "IDE_B" 
#**.IDE_A.app[0].io.connectPort = 1112

#IDE_A GOOSE TO MU
#**.IDE_A.activateLLCsource = true
#**.IDE_A.numSourceApps = 1
#**.IDE_A.sourceApp[0].io.interface = "eth0"
#**.IDE_A.sourceApp[0].io.remoteAddress = "MU"
#**.IDE_A.sourceApp[0].source.packetLength = 100B
#**.IDE_A.sourceApp[0].source.productionInterval = 1s
#**.IDE_A.sourceApp[0].source.packetNameFormat = "%M->GOOSE-%c"
#**.IDE_A.sourceApp[0].io.localSap = 1
#**.IDE_A.sourceApp[0].io.remoteSap = 6

#IDE_A SV SINK
#**.IDE_A.activateLLCsink = true
#**.IDE_A.numSinkApps = 1
#**.IDE_A.sinkApp[0].io.interface = "eth0"
#**.IDE_A.sinkApp[0].io.localAddress = "IDE_A"
#**.IDE_A.sinkApp[0].io.localSap = 6

#IDE_B GOOSE TO MU
#**.IDE_B.activateLLCsource = true
#**.IDE_B.numSourceApps = 1
#**.IDE_B.sourceApp[0].io.interface = "eth0"
#**.IDE_B.sourceApp[0].io.remoteAddress = "MU"
#**.IDE_B.sourceApp[0].source.packetLength = 100B
#**.IDE_B.sourceApp[0].source.productionInterval = 1s
#**.IDE_B.sourceApp[0].source.packetNameFormat = "%M->GOOSE->%c"
#**.IDE_B.sourceApp[0].io.localSap = 1
#**.IDE_B.sourceApp[0].io.remoteSap = 6

#IDE_B MMS SINK
#**.IDE_B.numApps = 1
#**.IDE_B.app[0].typename = "TcpSinkApp"
#**.IDE_B.app[0].display-name = "MMS Sink"
#**.IDE_B.app[0].localPort = 1112

#IDE_B SV SINK
#**.IDE_B.activateLLCsink = true
#**.IDE_B.numApps = 1
#**.IDE_B.sinkApp[0].io.interface = "eth0"
#**.IDE_B.sinkApp[0].io.localAddress = "IDE_A"
#**.IDE_B.sinkApp[0].io.localSap = 6

#MU SV TO IDE_A and IDE_B
#TODO Make the SV traffic multicast to IDE_A and IDE_B
#**.MU.activateLLCsource = true
#**.MU.numSourceApps = 1
#**.MU.sourceApp[0].io.interface = "eth0"
#**.MU.sourceApp[0].io.remoteAddress = "IDE_A"
#**.MU.sourceApp[0].source.packetLength = 100B
#**.MU.sourceApp[0].source.productionInterval = 1s/40
#**.MU.sourceApp[0].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
#**.MU.sourceApp[0].io.localSap = 1
#**.MU.sourceApp[0].io.remoteSap = 6

#**.MU.sourceApp[1].io.interface = "eth0"
#**.MU.sourceApp[1].io.remoteAddress = "IDE_B"
#**.MU.sourceApp[1].source.packetLength = 100B
#**.MU.sourceApp[1].source.productionInterval = 1s/40
#**.MU.sourceApp[1].source.packetNameFormat = "%M-SV, Packet: %c, Event: %e"
#**.MU.sourceApp[1].io.localSap = 1
#**.MU.sourceApp[1].io.remoteSap = 6

#MU GOOSE SINK
#**.MU.activateLLCsink = true
#**.MU.numSinkApps = 1
#**.MU.sinkApp[0].io.interface = "eth0"
#**.MU.sinkApp[0].io.localAddress = "MU"
#**.MU.sinkApp[0].io.localSap = 6

#**.switch.macTable.forwardingTable = [{address: "IDE_A", interface: "eth0"}, \
                                      {address: "IDE_B", interface: "eth1"}, \
                                      {address: "MU", interface: "eth2"}]

